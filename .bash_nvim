#!/bin/bash
#
# Env variables to set: DOTFILES, DNVIM_XAUTH, DNVIM_WRKDIR
# DOTFILES = $HOME/.config/.dotfiles
# DNVIM_XAUTH = /tmp/.docker.xauth
# DNVIM_WRKDIR = $HOME/Documents
V_DOTFILES=${DOTFILES:=$HOME/.config/.dotfiles}
V_WRKDIR=${DNVIM_WRKDIR:=$HOME/Documents}
V_MEMORY=${DNVIM_MEMORY:=2g}
V_CPU=${DNVIM_CPU:=2}

# create_xauth_saint: create a xauth file with access permission
create_xauth_saint(){
  if [[ -n $DNVIM_XAUTH ]]; then
    # delete any folder with the same name
    sudo rm -rf $DNVIM_XAUTH
    # create a xauth file with access permission
    xauth nlist $DISPLAY | sed -e 's/^..../ffff/' | xauth -f $DNVIM_XAUTH nmerge - &> /dev/null
  fi
}


# run_container_saint: run the docker
run_container_saint(){
  # TODO: Security
  #       * block all traffic from host to docker
  #       * block all traffics to host
  #       * Block all traffics to others dockers
  #       * Restrict traffics to internet

  # TODO: Make this block of code DRY
  if [[ -n $DNVIM_XAUTH ]]; then
    docker network inspect le_saint_esprit --format {{.Id}} 2>/dev/null \
      || docker network create --driver bridge le_saint_esprit \
      && docker run -dit --network=le_saint_esprit \
      -m $V_MEMORY --memory-reservation=1g \
      --cpus=$V_CPU \
      --restart unless-stopped --name saint -h saint \
      -v ${V_WRKDIR}:/home/$USER/Documents \
      -v ${V_DOTFILES}:/home/$USER/.config/.dotfiles \
      -e DISPLAY=unix$DISPLAY \
      -v /tmp/.X11-unix:/tmp/.X11-unix \
      -v $DNVIM_XAUTH:${DNVIM_XAUTH}:rw -e XAUTHORITY=$DNVIM_XAUTH \
      saint:latest bash
  else
    docker network inspect le_saint_esprit --format {{.Id}} 2>/dev/null \
      || docker network create --driver bridge le_saint_esprit \
      && docker run -dit --network=le_saint_esprit \
      -m $V_MEMORY --memory-reservation=1g \
      --cpus=$V_CPU \
      --restart unless-stopped --name saint -h saint \
      -v ${V_WRKDIR}:/home/$USER/Documents \
      -v ${V_DOTFILES}:/home/$USER/.config/.dotfiles \
      -e XDG_RUNTIME_DIR=/tmp \
      -e WAYLAND_DISPLAY=$WAYLAND_DISPLAY \
      -v $XDG_RUNTIME_DIR/$WAYLAND_DISPLAY:/tmp/$WAYLAND_DISPLAY \
      saint:latest bash
  fi

  }


# start_saint: run or start container saint
start_saint(){
  container_exist=$( docker ps -a -f name=saint | grep saint 2> /dev/null )

  if [[ ! -z ${container_exist} ]]; then 
    container_exited=$( docker ps -a -f status=exited | grep saint 2> /dev/null )
    if [[ ! -z ${container_exited} ]]; then
      create_xauth_saint
      # restart container saint
      docker container start saint
    fi
  else
    create_xauth_saint
    # create container saint
    run_container_saint  >/dev/null 2>&1
  fi
}


# dnvim: run neovim in docker
if [[ ! -z "$(compgen -c | grep "^dnvim$")" ]]
then
  echo "The command 'dnvim' already exists."
else
  # TODO: Add options and helps 
  #       * -c, -o, --startuptime etc (neovim options)
  #       * help to display options we have. ie. ChangeLualine
  dnvim(){
    start_saint
    docker exec -it saint bash -c ". ~/.bashrc && cd ~/Documents/$@ && nvim"
  }

  # Bash completion
  dn_from_dir(){
    cd ~/Documents
  }

  complete -d -F dn_from_dir dnvim

  # TODO: Zsh completion
fi
